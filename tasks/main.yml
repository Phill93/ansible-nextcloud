---
# tasks file for nextcloud
  - name: Include OS-specific variables.
    include_vars: "{{ ansible_distribution }}.yml"

  - name: Install required packages
    apt:
      name: "{{ item }}"
      state: present
      update-cache: yes
    with_items:
      "{{ nextcloud_php_modules }}"
    notify: restart webserver

  - name: Check if Installed
    stat: path={{ nextcloud_install_dir}}/config/config.php
    register: installed

  - name: Creating Nextcloud directory
    file:
      path: "{{ nextcloud_install_dir }}"
      state: directory

  - name: Creating Nextcloud data directory
    file:
      path: "{{ nextcloud_data_dir }}"
      state: directory

  - name: Extracting Nextcloud archive ("{{ nextcloud_download_url }}") to "{{ nextcloud_install_dir }}"
    unarchive:
      src: "{{ nextcloud_download_url }}"
      remote_src: yes
      dest: "{{ nextcloud_extract_dir }}"
    when: installed.stat.exists == False

  - name: Setting file permissions
    file:
      path: "{{ nextcloud_install_dir }}"
      mode: 0640
      owner: "{{ nextcloud_http_user }}"
      group: "{{ nextcloud_http_group }}"
      recurse: yes

  - name: Setting data folder file permissions
    file:
      path: "{{ nextcloud_data_dir }}"
      mode: 0640
      owner: "{{ nextcloud_http_user }}"
      group: "{{ nextcloud_http_group }}"
      recurse: yes

  - name: Setting folder permissions
    file:
      path: "{{ nextcloud_install_dir }}"
      mode: 0755
      owner: "{{ nextcloud_http_user }}"
      group: "{{ nextcloud_http_group }}"
      state: directory
      recurse: yes

  - name: Setting folder permissions
    file:
      path: "{{ nextcloud_install_dir }}/{{ item }}"
      mode: 0750
      owner: "{{ nextcloud_http_user}}"
      group: "{{ nextcloud_http_group}}"
      recurse: yes
      state: directory
    with_items: "{{ nextcloud_folders }}"

  - name: Setting data folder permissions
    file:
      path: "{{ nextcloud_data_dir }}"
      mode: 0750
      owner: "{{ nextcloud_http_user }}"
      group: "{{ nextcloud_http_group }}"
      recurse: yes
      state: directory

  - name: Setting .htaccess permissions
    file:
      path: "{{ nextcloud_install_dir }}/.htaccess"
      mode: 0644
      owner: "root"
      group: "{{ nextcloud_http_group }}"

  - name: Setting data folder .htaccess permissions if exist
    file:
      path: "{{ nextcloud_data_dir }}/.htaccess"
      mode: 0644
      owner: "root"
      group: "{{ nextcloud_http_group }}"
    ignore_errors: yes

  - name: Make occ executable
    file:
      path: "{{ nextcloud_install_dir }}/occ"
      mode: 0751
      owner: "{{ nextcloud_http_user }}"
      group: "{{ nextcloud_http_group }}"

  - name: Use occ to install Nextcloud
    shell: "{{ nextcloud_install_cmd }}"
    become: true
    when: installed.stat.exists == False

  - name: Check if Installed
    stat: path={{ nextcloud_install_dir}}/config/config.php
    register: installed

  - name: Check Memory Cache
    shell: "{{ nextcloud_memorycache_check_cmd}}"
    become: true
    register: memcache
    ignore_errors: yes

  - name: Enable APC Memory Cache
    shell: "{{ nextcloud_memorycache_enable_apc_cmd }}"
    become: true
    when: nextcloud_memcache == "APC" and installed.stat.exists == True and memcache.stdout != "\\OC\\Memcache\\APC"

  - name: Enable APCu Memory Cache
    shell: "{{ nextcloud_memorycache_enable_apcu_cmd }}"
    become: true
    when: nextcloud_memcache == "APCu" and installed.stat.exists == True  and memcache.stdout != "\\OC\\Memcache\\APCu"

  - name: Set Trusted Domains
    shell: "{{ nextcloud_set_trusted_dom_cmd }}"
    become: true
    with_indexed_items: "{{ nextcloud_trusted_domains }}"

  - name: Install Cronjob
    cron:
      name: "Nextcloud Cronjob"
      minute: "*/15"
      user: "{{ nextcloud_http_user }}"
      job: "{{ nextcloud_cron_cmd}}"
      cron_file: "nextcloud"
    when: nextcloud_cron == True

  - name: Set Cron method to Crontab
    shell: "{{ nextcloud_cron_en_cmd }}"
    become: true
    when: nextcloud_cron == True
